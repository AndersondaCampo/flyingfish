FROM node:18-bullseye

ENV FLYINGFISH_NGINX_MODULE_MODE_DYN "0"

RUN apt-get update -y
RUN apt-get upgrade -y
RUN apt-get install -y dublin-traceroute
RUN apt-get install -y iputils-ping
RUN apt-get install -y openssl
RUN apt-get install -y curl gnupg2 ca-certificates lsb-release debian-archive-keyring
RUN apt install -y python3-pip python3-dev
RUN apt install -y git

RUN apt-get remove -y nginx nginx-common
RUN cd ~ && wget http://nginx.org/download/nginx-1.22.1.tar.gz && tar -zxvf nginx-1.22.1.tar.gz
RUN apt update -y
RUN apt-get upgrade -y
RUN apt-get install -y build-essential
RUN apt-get install -y libpcre3 libpcre3-dev zlib1g zlib1g-dev libssl-dev
RUN apt-get install -y mercurial
RUN cd ~ && \
    git clone --depth 1 --branch 0.7.9 https://github.com/nginx/njs.git && \
    cd ~/njs && \
    ./configure && \
    make

RUN cd ~/nginx-1.22.1 && \
    ./configure \
    --sbin-path=/usr/bin/nginx \
    --conf-path=/etc/nginx/nginx.conf \
    --error-log-path=/var/log/nginx/error.log \
    --http-log-path=/var/log/nginx/access.log \
    --with-pcre \
    --pid-path=/var/run/nginx.pid \
    --with-compat \
    --with-file-aio \
    --with-threads \
    --with-http_addition_module \
    --with-http_auth_request_module \
    --with-http_dav_module \
    --with-http_flv_module \
    --with-http_gunzip_module \
    --with-http_gzip_static_module \
    --with-http_mp4_module \
    --with-http_random_index_module \
    --with-http_realip_module \
    --with-http_slice_module \
    --with-http_ssl_module \
    --with-http_sub_module \
    --with-http_stub_status_module \
    --with-http_v2_module \
    --with-http_secure_link_module \
    --add-module=../njs/nginx \
    --with-mail \
    --with-mail_ssl_module \
    --with-stream \
    --with-stream_realip_module \
    --with-stream_ssl_module \
    --with-stream_ssl_preread_module \
    --modules-path=/usr/lib/nginx/modules/ &&\
     make && \
     make install

RUN pip3 install pip --upgrade
RUN pip3 install certbot-nginx
RUN mkdir /etc/letsencrypt

RUN mkdir -p /opt/app
RUN mkdir -p /opt/app/frontend
RUN mkdir -p /opt/app/nginx
RUN mkdir -p /opt/app/nginx/body
RUN mkdir -p /opt/app/nginx/logs
RUN mkdir -p /opt/app/nginx/servers
RUN mkdir -p /opt/app/nginx/servers/logs
RUN mkdir -p /opt/app/nginx/html
RUN mkdir -p /var/log/flyingfish/
RUN mkdir -p /var/lib/flyingfish

WORKDIR /opt/app

COPY backend/dist ./dist
COPY backend/node_modules ./node_modules
COPY backend/package.json ./package.json

COPY frontend/assets ./frontend/assets
COPY frontend/images ./frontend/images
COPY frontend/dist ./frontend/dist
COPY frontend/src ./frontend/src
COPY frontend/index.html ./frontend/index.html
COPY frontend/login.html ./frontend/login.html
COPY frontend/manifest.json ./frontend/manifest.json
COPY frontend/package.json ./frontend/package.json

COPY nginx/dist ./nginx/dist
COPY nginx/node_modules ./nginx/node_modules
COPY nginx/pages ./nginx/pages
COPY nginx/htpasswd ./nginx/htpasswd
COPY nginx/package.json ./nginx/package.json

RUN npm install supervisor -g

EXPOSE 80
EXPOSE 443
EXPOSE 3000

CMD [ "node",  "dist/main.js", "--config=/opt/app/config.json"]